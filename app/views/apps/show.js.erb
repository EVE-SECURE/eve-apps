var Data = {
  <%== generate_json(@types) %>

  22: {
    name: 'Arkonor',
    volume: 16.0,
    compress: 20,
    compression: 1000,
    portion_size: 200,
    refine: {
      34: 300,
      39: 166,
      40: 333
    }
  },
  1223: {
    name: 'Bistot',
    volume: 16.0,
    compress: 20,
    compression: 1000,
    portion_size: 200,
    refine: {
      35: 170,
      39: 341,
      40: 170
    }
  },
  1225: {
    name: 'Crokite',
    volume: 16.0,
    compress: 20,
    compression: 1250,
    portion_size: 250,
    refine: {
      34: 331,
      35: 170,
      38: 331,
      39: 663
    }
  },
  1232: {
    name: 'Dark Ochre',
    volume: 8.0,
    compress: 20,
    compression: 2000,
    portion_size: 400,
    refine: {
      34: 250,
      38: 500,
      39: 250
    }
  },
  1229: {
    name: 'Gneiss',
    volume: 5,
    compress: 20,
    compression: 4000,
    portion_size: 400,
    refine: {
      34: 171,
      36: 171,
      37: 343,
      39: 171
    }
  },
  21: {
    name: 'Hedbergite',
    volume: 3,
    compress: 20,
    compression: 5000,
    portion_size: 500,
    refine: {
      37: 708,
      38: 354,
      39:  32
    }
  },
  1231: {
    name: 'Hemorphite',
    volume: 3,
    compress: 20,
    compression: 5000,
    portion_size: 500,
    refine: {
      34: 212,
      37: 212,
      38: 424,
      39:  28,
    }
  },
  1226: {
    name: 'Jaspet',
    volume: 2,
    compress: 20,
    compression: 7500,
    portion_size: 500,
    refine: {
      34: 259,
      35: 259,
      36: 518,
      38: 259,
      39:   8
    }
  },
  20: {
    name: 'Kernite',
    volume: 1.2,
    compress: 20,
    compression: 12000,
    portion_size: 400,
    refine: {
      34: 386,
      36: 773,
      37: 386
    }
  },
  1227: {
    name: 'Omber',
    volume: 0.6,
    compress: 20,
    compression: 25000,
    portion_size: 500,
    refine: {
      34: 307,
      35: 123,
      37: 307
    }
  },
  18: {
    name: 'Plagioclase',
    volume: 0.35,
    compress: 40,
    compression: 33300,
    portion_size: 333,
    refine: {
      34: 256,
      35: 512,
      36: 256
    }
  },
  1224: {
    name: 'Pyroxeres',
    volume: 0.3,
    compress: 40,
    compression: 49950,
    portion_size: 333,
    refine: {
      34: 844,
      35: 59,
      36: 120,
      38: 11
    }
  },
  1228: {
    name: 'Scordite',
    volume: 0.15,
    compress: 40,
    compression: 99900,
    portion_size: 333,
    refine: {
      34: 833,
      35: 416
    }
  },
  19: {
    name: 'Spodumain',
    volume: 16,
    compress: 20,
    compression: 1250,
    portion_size: 250,
    refine: {
      34: 700,
      35: 140,
      40: 140
    }
  },
  1230: {
    name: 'Veldspar',
    volume: 0.1,
    compress: 40,
    compression: 166500,
    portion_size: 333,
    refine: {
      34: 1000
    }
  }
};


function compute() {
  <% if @app.id == 1 %>
  var volume = 0.0;
  var compression_volume = 0.0;
  var compression_excess = 0.0;
  var compression_time = 0.0;
  var mineral_units = new Array;
  var refine_excess = 0.0;

  for (i in Data) {
    var type = Data[i];
    var units = parseInt($('#type_' + i).val());

    if (units > 0) {
      volume += type.volume * units;
      refine_excess += units % type.portion_size * type.volume;
      compression_volume += parseInt(units / type.compress) * type.volume;
      compression_excess += units % type.compression * type.volume;
      compression_time += units / type.compression * 240;
      
      for (j in type.refine) {
        if (!mineral_units[j]) {
          mineral_units[j] = 0;
        }
        mineral_units[j] += parseInt(units / type.portion_size) * type.refine[j];
      }
    }
  };

  // Iteron Mark V @ 100%: 49233.1 m3.
  var haul_time = volume / 49088 * 240;

  var refining_standard  = volume /  40000 *  3600;
  var refining_medium    = volume /  20000 *  5400;
  var refining_intensive = volume / 200000 * 10800;

  var refine_sell = 0.0;
  var refine_buy = 0.0;
  var refine_volume = 0.0;

  for (i in mineral_units) {
    refine_sell += Data[i].sell * mineral_units[i];
    refine_buy += Data[i].buy * mineral_units[i];
    refine_volume += Data[i].volume * mineral_units[i];
    $('#type_' + i).html(addCommas(mineral_units[i]));
  }

  var mining_time = volume / 150000;
  var mining_sell = refine_sell / mining_time;
  var mining_buy = refine_buy / mining_time;

  $('#volume').html(addCommas(volume.toFixed(1)));
  $('#haul_time').html(addCommas(haul_time.toFixed(1)));
  $('#refine_volume').html(addCommas(refine_volume.toFixed(1)));
  $('#refine_excess').html(addCommas(refine_excess.toFixed(1)));
  $('#refine_sell').html(addCommas(refine_sell.toFixed(2)));
  $('#refine_buy').html(addCommas(refine_buy.toFixed(2)));
  $('#mining_time').html(addCommas(mining_time.toFixed(1)));
  $('#mining_sell').html(addCommas(mining_sell.toFixed(2)));
  $('#mining_buy').html(addCommas(mining_buy.toFixed(2)));
  $('#compression_volume').html(addCommas(compression_volume.toFixed(1)));
  $('#compression_excess').html(addCommas(compression_excess.toFixed(1)));
  $('#compression_time').html(addCommas(compression_time.toFixed(2)));
  $('#refining_standard').html(addCommas(refining_standard.toFixed(2)));
  $('#refining_medium').html(addCommas(refining_medium.toFixed(2)));
  $('#refining_intensive').html(addCommas(refining_intensive.toFixed(2)));

  $('#ore').html(addCommas(volume.toFixed(1)));
  $('#minerals').html(addCommas(refine_buy.toFixed(2)));
  $('#mining').html(addCommas(mining_time.toFixed(1)));
  $('#compression').html(addCommas(compression_volume.toFixed(1)));
  $('#pos_refining').html(addCommas(refining_intensive.toFixed(1)));


  // Gas Harvesting.
  <% elsif @app.id == 2 %>

  var gas_buy = 0.0;
  for (i in Data) {
    var type = Data[i];
    var units = parseInt($('#type_' + i).val());

    if (units > 0) {
      gas_buy += type.buy * units;
    }
  }

  $('#gas_buy').html(addCommas(gas_buy.toFixed(2)));
  $('#gas').html(addCommas(gas_buy.toFixed(2)));

  var barren_buy       = Data[30370].buy * 3000 + Data[30371].buy * 1500;
  var token_buy        = Data[30371].buy * 3000 + Data[30372].buy * 1500;
  var minor_buy        = Data[30372].buy * 3000 + Data[30373].buy * 1500;
  var ordinary_buy     = Data[30373].buy * 3000 + Data[30374].buy * 1500;
  var sizeable_buy     = Data[30374].buy * 3000 + Data[30370].buy * 1500;
  var bountiful_buy    = Data[30375].buy * 5000 + Data[30376].buy * 1000;
  var vast_buy         = Data[30376].buy * 5000 + Data[30375].buy * 1000;
  var vital_buy        = Data[30377].buy *  500 + Data[30378].buy * 6000;
  var instrumental_buy = Data[30378].buy *  500 + Data[30377].buy * 6000;

  var c3_ftm                 = Data[30311].buy *  2 / (Data[   40].buy *  80 +
                                                       Data[30374].buy * 100 +
                                                       Data[30378].buy * 100);

  var carbon_86              = Data[30310].buy *  8 / (Data[   39].buy *  30 +
                                                       Data[30376].buy * 100 +
                                                       Data[30377].buy * 100);
  var fullerene_intercalated;
  var fulleroferocene;
  var graphene               = Data[30309].buy * 30 / (Data[   38].buy * 400 +
                                                       Data[30375].buy * 100 +
                                                       Data[30376].buy * 100);
  var lanthanum;
  var methanofullerene;
  var ppd;
  var scandium;

  var vast_buy_polymer         = Data[30376].buy * 5000 * graphene +
                                 Data[30375].buy * 1000 * graphene;
  var vital_buy_polymer        = Data[30377].buy *  500 * carbon_86 +
                                 Data[30378].buy * 6000 * c3_ftm;
  var instrumental_buy_polymer = Data[30377].buy * 6000 * carbon_86 +
                                 Data[30378].buy *  500 * c3_ftm;

  $('#vast').html(addCommas(vast_buy_polymer.toFixed(2)));
  $('#vast_buy').html(addCommas(vast_buy.toFixed(2)));
  $('#vast_buy_polymer').html(addCommas(vast_buy_polymer.toFixed(2)));

  $('#vital').html(addCommas(vital_buy_polymer.toFixed(2)));
  $('#vital_buy').html(addCommas(vital_buy.toFixed(2)));
  $('#vital_buy_polymer').html(addCommas(vital_buy_polymer.toFixed(2)));

  $('#instrumental').html(addCommas(instrumental_buy_polymer.toFixed(2)));
  $('#instrumental_buy').html(addCommas(instrumental_buy.toFixed(2)));
  $('#instrumental_buy_polymer').html(addCommas(instrumental_buy_polymer.toFixed(2)));

  <% end %>
}


$(function() {
  // Clear default text.
  $('input[type=text]').focus(function() {
    if ($(this).attr('class') == 'inactive') {
      $(this).attr('title', $(this).val());
      $(this).val('');
      $(this).removeClass('inactive');
    }
  });

  // Set default text.
  $('input[type=text]').blur(function() {
    if ($(this).val() == '') {
      $(this).val($(this).attr('title'));
      $(this).addClass('inactive');
    }
  });

  // Collapse category.
  $('.category thead').click(function() {
    $(this).next('tbody').toggle();
    if ($(this).hasClass('active')) {
      $(this).removeClass('active');
    } else {
      $(this).addClass('active');
    }
  });

  $('input[type=submit]').click(function() {
    compute();
    return false;
  });

  $('input[type=submit]').click();
});


